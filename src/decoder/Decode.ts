const digitSet1 = [
  [4, 1, 2, 7, 6, 5, 8, 3],
  [3, 2, 7, 8, 4, 1, 6, 5],
  [2, 4, 6, 7],
  [5, 3, 2, 6],
  [5, 7, 3, 2, 1, 8, 6, 4],
  [8, 2, 4, 7, 1, 3, 6, 5],
  [5, 4, 8, 1, 3, 7, 6, 2],
  [2, 6, 8, 7],
  [1, 8, 4, 6, 3, 7, 2, 5],
  [8, 3, 2, 1],
  [2, 6, 8, 7, 5, 3, 4, 1],
  [1, 4, 6, 8],
];

const digitSet2 = [
  [6, 5, 8, 3, 4, 1, 2, 7],
  [7, 8, 3, 2, 6, 5, 4, 1],
  [1, 5, 8, 3],
  [4, 7, 8, 1],
  [8, 1, 4, 6, 7, 5, 2, 3],
  [6, 5, 1, 3, 4, 7, 8, 2],
  [6, 2, 3, 7, 8, 1, 5, 4],
  [7, 8, 6, 2],

  [2, 5, 3, 7, 4, 6, 1, 8],
  [6, 7, 4, 5],
  [4, 1, 5, 3, 8, 7, 2, 6],
  [8, 6, 4, 1],
];

const digitSet3 = [
  [1, 4, 7, 2, 5, 6, 3, 8],
  [7, 8, 3, 2, 6, 5, 4, 1],
  [6, 7, 2, 4],
  [8, 1, 4, 7],
  [5, 7, 3, 2, 1, 8, 6, 4],
  [8, 2, 4, 7, 1, 3, 6, 5],
  [5, 4, 8, 1, 3, 7, 6, 2],
  [8, 7, 2, 6],

  [3, 7, 2, 5, 1, 8, 4, 6],
  [8, 3, 2, 1],
  [8, 7, 2, 6, 4, 1, 5, 3],
  [4, 1, 8, 6],
];

const digitSet4 = [
  [5, 6, 3, 8, 1, 4, 7, 2],
  [3, 2, 7, 8, 4, 1, 6, 5],
  [8, 3, 1, 5],
  [2, 6, 5, 3],

  [8, 1, 4, 6, 7, 5, 2, 3],
  [6, 5, 1, 3, 4, 7, 8, 2],
  [6, 2, 3, 7, 8, 1, 5, 4],
  [6, 2, 7, 8],

  [4, 6, 1, 8, 2, 5, 3, 7],
  [6, 7, 4, 5],
  [5, 3, 4, 1, 2, 6, 8, 7],
  [6, 8, 1, 4],
];

const digitSet5 = [
  [6, 5, 8, 3, 4, 1, 2, 7],
  [7, 8, 3, 2, 6, 5, 4, 1],
  [1, 5, 8, 3],
  [8, 1, 4, 7],
  [7, 5, 2, 3, 8, 1, 4, 6],
  [1, 3, 6, 5, 8, 2, 4, 7],
  [3, 7, 6, 2, 5, 4, 8, 1],
  [7, 8, 6, 2],

  [5, 2, 7, 3, 6, 4, 8, 1],
  [3, 8, 1, 2],
  [8, 7, 2, 6, 4, 1, 5, 3],
  [4, 1, 8, 6],
];

const digitSet6 = [
  [5, 6, 3, 8, 1, 4, 7, 2],
  [3, 2, 7, 8, 4, 1, 6, 5],
  [8, 3, 1, 5],
  [5, 3, 2, 6],
  [7, 5, 2, 3, 8, 1, 4, 6],
  [1, 3, 6, 5, 8, 2, 4, 7],
  [3, 7, 6, 2, 5, 4, 8, 1],
  [6, 2, 7, 8],

  [6, 4, 8, 1, 5, 2, 7, 3],
  [3, 8, 1, 2],
  [2, 6, 8, 7, 5, 3, 4, 1],
  [1, 4, 6, 8],
];

const digitSet7 = [
  [1, 4, 7, 2, 5, 6, 3, 8],
  [7, 8, 3, 2, 6, 5, 4, 1],
  [6, 7, 2, 4],
  [4, 7, 8, 1],
  [1, 8, 6, 4, 5, 7, 3, 2],
  [4, 7, 8, 2, 6, 5, 1, 3],
  [8, 1, 5, 4, 6, 2, 3, 7],
  [8, 7, 2, 6],

  [7, 3, 5, 2, 8, 1, 6, 4],
  [7, 6, 5, 4],
  [4, 1, 5, 3, 8, 7, 2, 6],
  [8, 6, 4, 1],
];

const digitSet8 = [
  [4, 1, 7, 2, 6, 5, 8, 3],
  [3, 2, 7, 8, 4, 1, 6, 5],
  [2, 4, 6, 7],
  [2, 6, 5, 3],

  [1, 8, 6, 4, 5, 7, 3, 2],
  [4, 7, 8, 2, 6, 5, 1, 3],
  [8, 1, 5, 4, 6, 2, 3, 7],
  [2, 6, 8, 7],

  [8, 1, 6, 4, 7, 3, 5, 2],
  [7, 6, 5, 4],
  [5, 3, 4, 1, 2, 6, 8, 7],
  [6, 8, 1, 4],
];

const allDigitSets = [
  digitSet1,
  digitSet2,
  digitSet3,
  digitSet4,
  digitSet5,
  digitSet6,
  digitSet7,
  digitSet8,
];

export const decode = (input: number[]) => {
  let validSets = [true, true, true, true, true, true, true, true];

  for (let i = 0; i < input.length; i++) {
    const digit = input[i];
    for (let j = 0; j < 8; j++) {
      if (validSets[j] && !allDigitSets[j][i].includes(digit)) {
        console.log(`Digit ${digit} is not valid for set ${j + 1}`);
        console.log(`Removing set ${j + 1}`);
        console.log(allDigitSets[j][i]);
        validSets[j] = false;
      }
    }
  }

  console.log(validSets);
};
